<HTML xmlns="http://www.w3.org/1999/xhtml">
    <HEAD>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="description" content="" />
        <meta name="author" content="Matthias Edler-Golla, wachenfeld-golla.de" />
        <meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=no;" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black" />
        <meta http-equiv="pragram" content="no-cache"/> 
        <meta http-equiv="cache-control" content="no-cache, must-revalidate"/> 
        <meta http-equiv="expires" content="0"/> 

        <!-- <link rel="apple-touch-icon-precomposed" href="/p/logo_home_iphone.png" />
        <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/p/logo_home_ipad.png" />
        <link rel="shortcut icon" href="/favicon.ico" />
        <link rel="apple-touch-startup-image" href="/p/StartupGraphic.png" />
        <link rel="stylesheet" href="/c/stylesheet.css" />
        <link rel="stylesheet" href="/c/style.css" /> -->
        <style type="text/css">
            body{
                // background-image: url(img/default.jpg); 
                background: gray; 
                background-size: 100%;

                -moz-user-select: none; /*ff*/
                -webkit-user-select: none; /*webkit*/
                -ms-user-select: none; /*IE10*/
                -khtml-user-select: none; /*old*/
                user-select: none;
            }
            #wrap{
                position:relative;
                margin: auto;
            }
            #main{
                position:relative; 
                //margin: auto;
                padding:0;
                top:0;
                left:0;
                background-color: white;
                //border:1px solid red;
            }
            .textCenter{
                //MARGIN-LEFT: auto;
                vertical-align:middle;
                text-align:center;
                //word-wrap:break-word;
                text-overflow: ellipsis; 
                overflow: hidden; 
                white-space: nowrap; 
            }
        </style>
        <link href="js/jqueryui/jqueryui.css" rel="stylesheet" type="text/css"/>
        <link href="css/nav.css" rel="stylesheet" type="text/css"/> 
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">

        <!-- this script helps older IE versions to understand html5 -->
        <!--[if lt IE 9 ]>
            <script src="js/html5.js"></script>
        <![endif]-->
        <script type="text/javascript" src="/js/utility.js"></script>
        <script type="text/javascript" src="/js/storage.js"></script>
        <script type="text/javascript" src="/js/bigint.js"></script>
        <script type="text/javascript" src="/js/encrypt.js"></script>
        <script type="text/javascript" src="/js/ajax.js"></script>
        <script type="text/javascript" src="/js/login.js"></script>
        <script type="text/javascript" src="/js/pagecommon.js"></script>
        <script type="text/javascript" src="/js/binding.js"></script>
        <script type="text/javascript" src="js/jquery.js"></script>
        <script type="text/javascript" src="js/jqueryui/jqueryui.js"></script>
        <script type="text/javascript" src="js/render.js"></script>
        <script src="https://www.gstatic.com/firebasejs/7.2.3/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/7.2.3/firebase-firestore.js"></script>
    </HEAD>
    <BODY onload="loadPage()">  
        <DIV  id="wrap">
                        <div id="main" onclick="hideMenu()" prefix="Siemens" style="width: 1420px; height: 880px; background-image: url(file:///D:/documentos/Silo/NetBeansProjects/Silo_Web/img/9599BBF5.png); background-size: 1420px 880px; margin: 0px; padding: 0px; top: 0px; left: 0px; background-position: 0px 0px; background-repeat: no-repeat no-repeat;" bg_image="img/9599BBF5.png">


<div comp_type="CustomizedComponent" show_function="loadCustomizedComponent" class="server_binding textCenter" style="position: absolute; left: 240px; top: 132px; width: 186px; height: 254px; text-align: center; background-size: 186px 255px; line-height: 254px; transform: rotate(0deg); background-image: url(file:///D:/documentos/Silo/NetBeansProjects/Silo_Web/img/0B1114AF.png); z-index: 6; background-repeat: no-repeat no-repeat;" range="130" address="10" type="1" length="1" on_text="" off_text="" id="1599934723908283" show_param="1599934723908283" degree="0" tag_id="Private Tag" on_image="img/7721D752.png" off_image="img/0B1114AF.png" mode="false"></div>


<script type="text/javascript">    var loadCustomizedComponent = function loadCustomizedComponent() {        var id = this.m_sShowParam;        var ontext = document.getElementById(id).getAttribute("on_text");        var offtext = document.getElementById(id).getAttribute("off_text");        var onimage = document.getElementById(id).getAttribute("on_image");        var offimage = document.getElementById(id).getAttribute("off_image");        var value = parseInt(this.m_sValue, 16);        document.getElementById(id).value = value;        var showText = (value == 0) ? offtext : ontext;        var showImage = (value == 0) ? offimage : onimage;        if ($("#" + id + " p").length == 0) {            document.getElementById(id).innerHTML = showText;        } else {            $("#" + id + " p").html(showText);        }        document.getElementById(id).style.backgroundImage = "url(" + showImage + ")";    };</script>


<div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 291px; top: 267px; width: 84px; height: 22px; text-align: center; background-size: 84px 23px; transform: rotate(0deg); z-index: 5; background-repeat: no-repeat no-repeat;" range="20" address="656" type="4" length="1" show_param="1599934723918284" id="1599934723918284" degree="0" tag_id="Private Tag" block_format="Unsigned" mode="true">    


<div class="valueText" style="">        


<input class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 86px;"></span>    


</div>    


<div class="notice" style="color: red;"></div>


</div>


<script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script>


<div comp_type="CustomizedComponent" show_function="loadCustomizedComponent" class="server_binding textCenter" style="position: absolute; left: 322px; top: 402px; width: 57px; height: 34px; text-align: center; background-size: 57px 35px; line-height: 34px; transform: rotate(0deg); background-image: url(file:///D:/documentos/Silo/NetBeansProjects/Silo_Web/img/982170EF.png); z-index: 8; background-repeat: no-repeat no-repeat;" range="131" address="53" type="1" length="1" on_text="" off_text="" id="1599934723922285" show_param="1599934723922285" degree="0" tag_id="Private Tag" on_image="img/AC2417CB.png" off_image="img/982170EF.png" mode="true" onclick="setDigitalData(this)"></div>


<script type="text/javascript">    var loadCustomizedComponent = function loadCustomizedComponent() {        var id = this.m_sShowParam;        var ontext = document.getElementById(id).getAttribute("on_text");        var offtext = document.getElementById(id).getAttribute("off_text");        var onimage = document.getElementById(id).getAttribute("on_image");        var offimage = document.getElementById(id).getAttribute("off_image");        var value = parseInt(this.m_sValue, 16);        document.getElementById(id).value = value;        var showText = (value == 0) ? offtext : ontext;        var showImage = (value == 0) ? offimage : onimage;        if ($("#" + id + " p").length == 0) {            document.getElementById(id).innerHTML = showText;        } else {            $("#" + id + " p").html(showText);        }        document.getElementById(id).style.backgroundImage = "url(" + showImage + ")";    };</script>


<div comp_type="CustomizedComponent" show_function="loadCustomizedComponent" class="server_binding textCenter" style="position: absolute; left: 290px; top: 277px; width: 83px; height: 76px; text-align: center; background-size: 83px 77px; line-height: 76px; transform: rotate(0deg); background-image: url(file:///D:/documentos/Silo/NetBeansProjects/Silo_Web/img/9538DB25.gif); z-index: 12; background-repeat: no-repeat no-repeat;" range="130" address="10" type="1" length="1" on_text="" off_text="" id="1599934723935286" show_param="1599934723935286" degree="0" tag_id="Private Tag" on_image="img/87702A79.gif" off_image="img/9538DB25.gif" mode="false"></div>


<script type="text/javascript">    var loadCustomizedComponent = function loadCustomizedComponent() {        var id = this.m_sShowParam;        var ontext = document.getElementById(id).getAttribute("on_text");        var offtext = document.getElementById(id).getAttribute("off_text");        var onimage = document.getElementById(id).getAttribute("on_image");        var offimage = document.getElementById(id).getAttribute("off_image");        var value = parseInt(this.m_sValue, 16);        document.getElementById(id).value = value;        var showText = (value == 0) ? offtext : ontext;        var showImage = (value == 0) ? offimage : onimage;        if ($("#" + id + " p").length == 0) {            document.getElementById(id).innerHTML = showText;        } else {            $("#" + id + " p").html(showText);        }        document.getElementById(id).style.backgroundImage = "url(" + showImage + ")";    };</script>


<div class="TextComponent" comp_type="TextComponent" style="overflow: hidden; line-height: 100%; position: absolute; left: 291px; top: 32px; width: 482px; height: 70px; text-align: center; background-size: 482px 71px; transform: rotate(0deg); font-style: normal; font-family: Arial; font-size: 24px; color: rgb(51, 51, 0); z-index: 9; background-repeat: no-repeat no-repeat;" id="1599934723939287" degree="0">    


<p style="display:table-cell; vertical-align:middle;text-align: center; ">Modo Automatico "Silo 11"</p>


</div>


<div comp_type="CustomizedComponent" show_function="loadCustomizedComponent" class="server_binding textCenter" style="position: absolute; left: 253px; top: 144px; width: 159px; height: 231px; text-align: center; background-size: 159px 232px; line-height: 231px; transform: rotate(0deg); background-image: url(file:///D:/documentos/Silo/NetBeansProjects/Silo_Web/img/DD670257.png); z-index: 7; background-repeat: no-repeat no-repeat;" range="130" address="0" type="1" length="1" on_text="" off_text="" id="1599934723943288" show_param="1599934723943288" degree="0" tag_id="Private Tag" on_image="img/DD670257.png" off_image="img/DD670257.png" mode="false"></div>


<script type="text/javascript">    var loadCustomizedComponent = function loadCustomizedComponent() {        var id = this.m_sShowParam;        var ontext = document.getElementById(id).getAttribute("on_text");        var offtext = document.getElementById(id).getAttribute("off_text");        var onimage = document.getElementById(id).getAttribute("on_image");        var offimage = document.getElementById(id).getAttribute("off_image");        var value = parseInt(this.m_sValue, 16);        document.getElementById(id).value = value;        var showText = (value == 0) ? offtext : ontext;        var showImage = (value == 0) ? offimage : onimage;        if ($("#" + id + " p").length == 0) {            document.getElementById(id).innerHTML = showText;        } else {            $("#" + id + " p").html(showText);        }        document.getElementById(id).style.backgroundImage = "url(" + showImage + ")";    };</script>


<div class="TextComponent" comp_type="TextComponent" style="overflow: hidden; line-height: 100%; position: absolute; left: 308px; top: 161px; width: 84px; height: 41px; text-align: center; background-size: 84px 42px; transform: rotate(0deg); font-style: normal; font-family: Arial; font-size: 14px; color: rgb(0, 0, 0); z-index: 10; background-repeat: no-repeat no-repeat;" id="1599934723947289" degree="0">    


<p style="display:table-cell; vertical-align:middle;text-align: center; ">SILO 11</p>


</div>


<div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 290px; top: 304px; width: 84px; height: 22px; text-align: center; background-size: 84px 23px; transform: rotate(0deg); z-index: 4; background-repeat: no-repeat no-repeat;" range="20" address="672" type="4" length="1" show_param="1599934723951290" id="1599934723951290" degree="0" tag_id="Private Tag" block_format="Unsigned" mode="true">    


<div class="valueText" style="">        


<input class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 86px;"></span>    


</div>    


<div class="notice" style="color: red;"></div>


</div>


<script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script>


<div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 291px; top: 228px; width: 84px; height: 22px; text-align: center; background-size: 84px 23px; transform: rotate(0deg); z-index: 3; background-repeat: no-repeat no-repeat;" range="20" address="640" type="4" length="1" show_param="1599934723956291" id="1599934723956291" degree="0" tag_id="Private Tag" block_format="Unsigned" mode="true">    


<div class="valueText" style="">        


<input class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 86px;"></span>    


</div>    


<div class="notice" style="color: red;"></div>


</div>


<script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script>


<div comp_type="RectangleComponent" style="border: 0px solid rgb(0, 0, 0); position: absolute; left: 477px; top: 130px; width: 332px; height: 304px; text-align: center; background-size: 332px 305px; transform: rotate(0deg); zoom: 1; opacity: 1; z-index: 11; background-repeat: no-repeat no-repeat;" id="1599934723960292" degree="0">


    <div>
            <div id="form">
<fieldset>
        <legend>Datos</legend>
        <label for="humedad">Humedad:</label>
        <select name="humedad" id="humedad">
            <option value="10">Muy Seco</option>
            <option value="11">Seco</option>
            <option value="14">Humedo</option>
            <option value="16">Muy Humedo</option>
        </select>
        <br><br>
        <label for="">Toneladas:</label>
        <input type="text" id="toneladas">
        <br><br>
        <label for="temperatura">Temperatura:</label>
        <select name="temperatura" id="temperatura">
                    <option value="15">Frio</option>
                    <option value="22">Normal</option>
                    <option value="30">Caliente</option>
                    <option value="35">Muy Caliente</option>
                </select>
        <br><br>
        <label for="grano">Selecciones el Grano:</label>
        <select name="grano" id="grano">
            <option value="cebada">Cebada</option>
            <option value="maiz">Maiz</option>
            <option value="trigo">Trigo</option>
            <option value="soja">Soja</option>
        </select>
        <br><br>
        <input type="button" onclick="calcular()" value="Calucular">
        </fieldset>
    </div>
    <div id="datos">
  <fieldset>
      <legend>Informacion de Grano</legend>
      <p id='info_marcha'>Marcha: Datos no Ingresados (hs)</p>
      <p id='info_descanso'>descanso: Datos no Ingresados (hs)</p>
      <p id='info_total'>Total horas: Datos no Ingresados (hs)</p>
      <p id='info_grano'>Grano: Datos no Ingresados (hs)</p>
      <p id='info_toneladas'>Tonaladas: Datos no Ingresados (hs)</p>
      <p id='info_humedad'>Humedad: Datos no Ingresados (hs)</p>
      <p id='info_temperatura'>Temperatura: Datos no Ingresados (hs)</p>
      <input type="button" onclick="cambiar_estado(false); setDigitalData(1,1599934723922285)" value="CANCELAR">
  <fieldset>
</div>
</div>
                        </div></div> 
                      
<script type="text/javascript">
    function setDigitalData(value,id) {
        var oRequest = new DBRequest(document.getElementById(id));
        if (value) {
            oRequest.SetValue("00");
        } else {
            oRequest.SetValue("01");
        }
        if (oRequest.SetQuery()) {
            intervalId = setInterval(checkResult, 1000, oRequest);
        }
        return false;
    }
    
    let silo = "silo11";
    let estado_actual = "estado11";
    let fraccion = 50; 
    let id_1 = "1599934723956291";
    let id_2 = "1599934723918284";
    let id_3 = "1599934723951290";
    let id_4 = "1602485685555163";
    let id_5 = "1599934723922285";  


    function getAttribute(id, attribute){
        return new Promise((resolve, reject) => { 
            var rep = 0;
            function test(){
            const e = document.getElementById(id);
            if(e && e.hasAttribute(attribute)){
                resolve(e.getAttribute(attribute));
                clearInterval(rep);
            }
            }
            rep = setInterval(test, 100);
        });
        }

        async function getHumedadActual(){
            const val = await getAttribute("id_humedad", "placeholder");
            console.log("esto entro porfin");
            console.log(val);
            return val;
            
        }
        
        async function getTemperaturaActual(){
            const val = await getAttribute("id_temperatura", "placeholder");
            console.log(val);
            return val;
            
        }

    
    firebase.initializeApp({
        apiKey: "AIzaSyAdDIO55DLUnZ0AO15r8Jk0GHWhQulv_Dc",
        authDomain: "prueba1-a6072.firebaseapp.com",
        projectId: "prueba1-a6072"
    });
    
    var db = firebase.firestore();
    
    var input1 = document.getElementById(id_1);
    input1.style.display = 'none';
    
    var input2 = document.getElementById(id_2);
    input2.style.display = 'none';
    input2.style.visibility = 'hidden';
    
    var input3 = document.getElementById(id_3);
    input3.style.display = 'none';   
    
    var btn = document.getElementById(id_5);
    btn.style.display = 'none';
    
    function cambiar_estado(estado){
        let s = db.collection("estados").doc(estado_actual);
        s.set({
            estado: estado
        });
        document.getElementById("form").hidden = estado;
        document.getElementById("datos").hidden = !estado;
    }
    
    
    
    function getEstado() {
    let s1 = db.collection("estados").doc(estado_actual);
            s1.onSnapshot(function(doc) {
                if (doc.exists) {
                        async function getAsincEstado(){
                        const e = await doc.data().estado;
                        return e;
                        }
                    getAsincEstado()
                    .then((res) => cambiar_estado(res)); 
                } else {
                    // doc.data() will be undefined in this case
                    console.log("No such document!");
                }
            }
    );
    }
    
    function mostrar_datos(){
        let s = db.collection("silos").doc(silo);
        s   .onSnapshot(function(doc) {
            if (doc.exists) {
                console.log("Document data:", doc.data());
                document.getElementById("info_marcha").innerHTML = "Marcha: " + doc.data().marcha + " hs";
                document.getElementById("info_descanso").innerHTML = "descanso: " + doc.data().descanzo + " hs";
                document.getElementById("info_total").innerHTML = "Total horas: " + doc.data().total + " hs";
                document.getElementById("info_toneladas").innerHTML = "Tonaladas: " + doc.data().toneladas + " T";
                document.getElementById("info_grano").innerHTML = "Grano: " + doc.data().grano;
                document.getElementById("info_humedad").innerHTML = "Humedad: " + doc.data().humedad +" %";
                document.getElementById("info_temperatura").innerHTML = "Temperatura: " + doc.data().temperatura + " C";
            } else {
                // doc.data() will be undefined in this case
                console.log("No such document!");
            }
        }
        );
    }
    
    function dec2hexString(dec) {
        return  (dec+0x10000).toString(16).substr(-4);
    }
    
    function set_or_update_silo(id,marcha_parcial,descanzo,marcha_total,grano,toneladas,humedad,temperatura){  
    let silo = db.collection("silos").doc(id);
        silo.set({
            marcha: parseInt(marcha_parcial),
            descanzo: parseInt(descanzo),
            total: parseInt(marcha_total),
            grano: grano,
            toneladas: parseInt(toneladas),
            humedad: parseInt(humedad),
            temperatura: parseInt(temperatura)
        });
    }
    
    async function calcular(){
        const humedad_actual = await getHumedadActual();
        const temperatura_actual = await getTemperaturaActual();
        let grano = document.getElementById('grano').value;
        let temperatura_grano = parseInt(document.getElementById('temperatura').value);
        let toneladas_grano = parseInt(document.getElementById('toneladas').value);
        let humedad_grano = parseInt(document.getElementById('humedad').value);
        let marcha_total = (Math.trunc(toneladas_grano/fraccion) % 2 > 0) ? Math.trunc(toneladas_grano/fraccion)+1 : Math.trunc(toneladas_grano/fraccion);
        let marcha_parcial = 4;
        let descanzo = 2;
        let temperatura_umbral;
        let humedad_humbral;
    
    
        
    
        console.log(humedad_actual);
        switch (grano) {
        case "soja":
            temperatura_umbral = 22;
            humedad_humbral = 12,5;
            break;
        case "cebada":
            temperatura_umbral = 22;
            humedad_humbral = 13,5;
            break;
        case "maiz":
            temperatura_umbral = 22;
            humedad_humbral = 13,5;
            break;
        case "trigo":
            temperatura_umbral = 22;
            humedad_humbral = 13,5;
        }
    
        function mensaje(){
            let val = 0;
            console.log("temp");
            console.log(temperatura_actual);
            console.log(temperatura_grano);
            if(temperatura_grano == 15 && temperatura_actual < 15){
                console.log("entro");
                val = 1;
            }
            if(temperatura_grano == 30 || temperatura_grano == 35){
                if ((temperatura_grano == "caliente") && (temperatura_actual) > 30){
                    val = 2;
                }
                if (temperatura_grano == 35 && temperatura_actual > 35){
                    val = 2;
                }
            }
            if(humedad_grano == 14 && humedad_actual > 80){
                val = 3;
            }
            if(humedad_grano == 16 && humedad_actual > 85){
                val = 3;
            }
            if(humedad_grano == 11 || humedad_grano  == 10){
                if(humedad_actual < 40){
                    val = 4;
                }
            }
            console.log("val");
            console.log(val);
            return val;
        }
        
        console.log("mensaje: " + mensaje()  )
        if(mensaje() == 0){          
            doSetAnalogValue(id_1, dec2hexString(marcha_total*60)); // Setea el valor del tiempo total en hexa
            doSetAnalogValue(id_2, dec2hexString(marcha_parcial*60)); // Setea el valor del tiempo en marcha en hexa
            doSetAnalogValue(id_3, dec2hexString(descanzo*60));  // Setea el valor del tiempo total en hexa
            doSetAnalogValue(id_4, dec2hexString(humedad_grano+20));
            cambiar_estado(true);
            set_or_update_silo(silo,marcha_parcial,descanzo,marcha_total,grano,toneladas_grano,humedad_grano,temperatura_grano);
            mostrar_datos();
            setDigitalData(0,id_5);
        }
        else{
            switch (mensaje()) {
                case 1:
                    alert("La temperatura del grano y la actual son muy bajas para iniciar");
                    break;
                case 2:
                    alert("La temperatura del grano y la actual son muy altas para iniciar");
                    break;
                case 3:
                    alert("La humedad del grano y la actual son muy altas para iniciar");
                    break;
                case 4:
                    alert("La humedad del grano y la actual son muy altas para iniciar");
        }    
    
        }
        }
        getEstado();
        mostrar_datos();
</script>

    </div>


</div>

<div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 240px; top: 132px; width: 22px; height: 22px; text-align: center; background-size: 22px 23px; transform: rotate(0deg); z-index: 2; background-repeat: no-repeat no-repeat;" range="20" address="944" type="4" length="1" show_param="1602485685555163" id="1602485685555163" degree="0" tag_id="Private Tag" block_format="Unsigned" mode="true">    
<div class="valueText" style="">        
<input class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 24px;"></span>    
</div>    
<div class="notice" style="color: red;"></div>
</div>
<script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script>
<script type="text/javascript">    var showDateTime = function showDateTime() {        if(this.m_sValue&&this.m_sValue.length==12){            var sv = this.m_sValue;            var sec = getValueByBlockFormat("Unsigned", "2", sv.substr(0,2)) + "";            sec = (sec.length == 1) ? "0" + sec : sec;            var date = "20" + sv.substr(2,2) + " - " + sv.substr(4,2) + " - " + sv.substr(6,2);            var time = sv.substr(8,2) + ":" + sv.substr(10,2) + ":" + sec;            var dayNo = new Date(parseInt("20" + sv.substr(2,2)), sv.substr(4,2)-1, sv.substr(6,2)).getDay();                $("#" + this.m_sShowParam + " .dayTime").html(WEEKDAY[dayNo] + " " + time);            $("#" + this.m_sShowParam + " .date").html(date);        }else{            $("#" + this.m_sShowParam + " .dayTime").html("ddd. HH:mm:ss");            $("#" + this.m_sShowParam + " .date").html("yyyy-MM-dd");            console.error("LWE runtime error: AnalogDateTimeComponent connect error!");        }    }</script><div class="TextComponent" comp_type="TextComponent" style="overflow: hidden; line-height: 100%; position: absolute; left: 678px; top: 44px; width: 65px; height: 34px; text-align: center; background-size: 65px 35px; transform: rotate(0deg); font-style: normal; font-family: Arial; font-size: 14px; color: rgb(0, 0, 0); z-index: 14; background-repeat: no-repeat no-repeat;" id="1602532906123284" degree="0">    <p style="display:table-cell; vertical-align:middle;text-align: center; ">Humedad:</p></div><div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 752px; top: 44px; width: 37px; height: 22px; text-align: center; background-size: 37px 23px; transform: rotate(0deg); z-index: 15; background-repeat: no-repeat no-repeat;" range="20" address="784" type="4" length="1" show_param="1602532906125285" id="1602532906125285" degree="0" tag_id="Private Tag" block_format="Signed" mode="false">    <div class="valueText" style="">        <input id="id_humedad" class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 39px;">%</span>    </div>    <div class="notice" style="color: red;"></div></div><script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script><div class="server_binding analog_input" comp_type="AnalogValueComponent" show_function="loadAnalogValueComponent" style="border: 0px solid red; position: absolute; left: 752px; top: 82px; width: 37px; height: 22px; text-align: center; background-size: 37px 23px; transform: rotate(0deg); z-index: 16; background-repeat: no-repeat no-repeat;" range="20" address="800" type="4" length="1" show_param="1602532906128286" id="1602532906128286" degree="0" tag_id="Private Tag" block_format="Signed" mode="false">    <div class="valueText" style="">        <input id="id_temperatura" class="inputVal" type="text" size="5" value="" style="width:100%;height:100%">        <span class="unit" style="position: absolute; top: 4px; left: 39px;">%</span>    </div>    <div class="notice" style="color: red;"></div></div><script type="text/javascript">    var loadAnalogValueComponent = function loadAnalogInputComponent() {        var id = this.m_sShowParam;        var blockFormat = $("#" + id).attr("block_format");        var accessModeType = $("#" + id).attr("type");        $("#" + id).attr("title", blockFormat);        var value = getValueByBlockFormat(blockFormat, accessModeType, this.m_sValue);        var actVal = value;        $("#" + id).children(".valueText").children(".inputVal").attr("placeholder", actVal);        $("#" + id).attr("last_placeholder", actVal);    }</script><div class="TextComponent" comp_type="TextComponent" style="overflow: hidden; line-height: 100%; position: absolute; left: 659px; top: 82px; width: 84px; height: 34px; text-align: center; background-size: 84px 35px; transform: rotate(0deg); font-style: normal; font-family: Arial; font-size: 14px; color: rgb(0, 0, 0); z-index: 17; background-repeat: no-repeat no-repeat;" id="1602532906130287" degree="0">    <p style="display:table-cell; vertical-align:middle;text-align: center; ">Temperatura:</p></div><div class="TextComponent" comp_type="TextComponent" style="overflow: hidden; line-height: 100%; position: absolute; left: 240px; top: 412px; width: 84px; height: 34px; text-align: center; background-size: 84px 35px; transform: rotate(0deg); font-style: normal; font-family: Arial; font-size: 14px; color: rgb(0, 0, 0); z-index: 18; background-repeat: no-repeat no-repeat;" id="1602533138124342" degree="0">    <p style="display:table-cell; vertical-align:middle;text-align: center; ">Automatico</p></div></div> 
        </DIV>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js" integrity="sha384-q2kxQ16AaE6UbzuKqyBE9/u/KzioAlnx2maXQHiDX9d4/zp8Ok3f+M7DPm+Ib6IU" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js" integrity="sha384-pQQkAEnwaBkjpqZ8RU1fF1AKtTcHJwFl3pblpTlHXybJjHpMYo79HY3hIi4NKxyj" crossorigin="anonymous"></script>

        <div id='timeout_dlg' style='display: none' >Please check the network connection!</div>
    </BODY>
</HTML>

